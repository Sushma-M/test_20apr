/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.bmgf_investments;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * KeyElement generated by hbm2java
 */
@Entity
@Table(name="`KeyElement`"
    ,schema="dbo"
)

public class KeyElement  implements java.io.Serializable {

    
    private String keyElementId;
    
    private String keyElementName;
    
    private SubInitiative subInitiative;
    
    private Set<Investment> investments = new HashSet<Investment>(0);

    public KeyElement() {
    }


    @Id 
    

    @Column(name="`KeyElementID`", length=36)
    public String getKeyElementId() {
        return this.keyElementId;
    }
    
    public void setKeyElementId(String keyElementId) {
        this.keyElementId = keyElementId;
    }

    

    @Column(name="`KeyElementName`")
    public String getKeyElementName() {
        return this.keyElementName;
    }
    
    public void setKeyElementName(String keyElementName) {
        this.keyElementName = keyElementName;
    }

    @ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="`SubInitiativeID`")
    public SubInitiative getSubInitiative() {
        return this.subInitiative;
    }
    
    public void setSubInitiative(SubInitiative subInitiative) {
        this.subInitiative = subInitiative;
    }

    @OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="keyElement")
    public Set<Investment> getInvestments() {
        return this.investments;
    }
    
    public void setInvestments(Set<Investment> investments) {
        this.investments = investments;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof KeyElement) )
		    return false;

		 KeyElement that = (KeyElement) o;

		 return ( (this.getKeyElementId()==that.getKeyElementId()) || ( this.getKeyElementId()!=null && that.getKeyElementId()!=null && this.getKeyElementId().equals(that.getKeyElementId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getKeyElementId() == null ? 0 : this.getKeyElementId().hashCode() );

         return result;
    }


}

