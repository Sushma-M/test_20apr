/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.db123testing.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_20apr.db123testing.*;

/**
 * Service object for domain model class TypesSpacing.
 * @see com.test_20apr.db123testing.TypesSpacing
 */

public interface TypesSpacingService {
   /**
	 * Creates a new typesspacing.
	 * 
	 * @param created
	 *            The information of the created typesspacing.
	 * @return The created typesspacing.
	 */
	public TypesSpacing create(TypesSpacing created);

	/**
	 * Deletes a typesspacing.
	 * 
	 * @param typesspacingId
	 *            The id of the deleted typesspacing.
	 * @return The deleted typesspacing.
	 * @throws EntityNotFoundException
	 *             if no typesspacing is found with the given id.
	 */
	public TypesSpacing delete(Integer typesspacingId) throws EntityNotFoundException;

	/**
	 * Finds all typesspacings.
	 * 
	 * @return A list of typesspacings.
	 */
	public Page<TypesSpacing> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<TypesSpacing> findAll(Pageable pageable);
	
	/**
	 * Finds typesspacing by id.
	 * 
	 * @param id
	 *            The id of the wanted typesspacing.
	 * @return The found typesspacing. If no typesspacing is found, this method returns
	 *         null.
	 */
	public TypesSpacing findById(Integer id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a typesspacing.
	 * 
	 * @param updated
	 *            The information of the updated typesspacing.
	 * @return The updated typesspacing.
	 * @throws EntityNotFoundException
	 *             if no typesspacing is found with given id.
	 */
	public TypesSpacing update(TypesSpacing updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the typesspacings in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the typesspacing.
	 */

	public long countAll();


    public Page<TypesSpacing> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

