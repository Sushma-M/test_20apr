/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.bmgf_investments2.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_20apr.bmgf_investments2.*;

/**
 * Service object for domain model class AttributeCategoryCode.
 * @see com.test_20apr.bmgf_investments2.AttributeCategoryCode
 */

public interface AttributeCategoryCodeService {
   /**
	 * Creates a new attributecategorycode.
	 * 
	 * @param created
	 *            The information of the created attributecategorycode.
	 * @return The created attributecategorycode.
	 */
	public AttributeCategoryCode create(AttributeCategoryCode created);

	/**
	 * Deletes a attributecategorycode.
	 * 
	 * @param attributecategorycodeId
	 *            The id of the deleted attributecategorycode.
	 * @return The deleted attributecategorycode.
	 * @throws EntityNotFoundException
	 *             if no attributecategorycode is found with the given id.
	 */
	public AttributeCategoryCode delete(String attributecategorycodeId) throws EntityNotFoundException;

	/**
	 * Finds all attributecategorycodes.
	 * 
	 * @return A list of attributecategorycodes.
	 */
	public Page<AttributeCategoryCode> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<AttributeCategoryCode> findAll(Pageable pageable);
	
	/**
	 * Finds attributecategorycode by id.
	 * 
	 * @param id
	 *            The id of the wanted attributecategorycode.
	 * @return The found attributecategorycode. If no attributecategorycode is found, this method returns
	 *         null.
	 */
	public AttributeCategoryCode findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a attributecategorycode.
	 * 
	 * @param updated
	 *            The information of the updated attributecategorycode.
	 * @return The updated attributecategorycode.
	 * @throws EntityNotFoundException
	 *             if no attributecategorycode is found with given id.
	 */
	public AttributeCategoryCode update(AttributeCategoryCode updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the attributecategorycodes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the attributecategorycode.
	 */

	public long countAll();


    public Page<AttributeCategoryCode> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

