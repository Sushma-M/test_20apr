/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.bmgf_investments2.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.test_20apr.bmgf_investments2.*;

/**
 * Service object for domain model class InvestmentAttribute.
 * @see com.test_20apr.bmgf_investments2.InvestmentAttribute
 */

public interface InvestmentAttributeService {
   /**
	 * Creates a new investmentattribute.
	 * 
	 * @param created
	 *            The information of the created investmentattribute.
	 * @return The created investmentattribute.
	 */
	public InvestmentAttribute create(InvestmentAttribute created);

	/**
	 * Deletes a investmentattribute.
	 * 
	 * @param investmentattributeId
	 *            The id of the deleted investmentattribute.
	 * @return The deleted investmentattribute.
	 * @throws EntityNotFoundException
	 *             if no investmentattribute is found with the given id.
	 */
	public InvestmentAttribute delete(String investmentattributeId) throws EntityNotFoundException;

	/**
	 * Finds all investmentattributes.
	 * 
	 * @return A list of investmentattributes.
	 */
	public Page<InvestmentAttribute> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<InvestmentAttribute> findAll(Pageable pageable);
	
	/**
	 * Finds investmentattribute by id.
	 * 
	 * @param id
	 *            The id of the wanted investmentattribute.
	 * @return The found investmentattribute. If no investmentattribute is found, this method returns
	 *         null.
	 */
	public InvestmentAttribute findById(String id) throws
	 EntityNotFoundException;
	/**
	 * Updates the information of a investmentattribute.
	 * 
	 * @param updated
	 *            The information of the updated investmentattribute.
	 * @return The updated investmentattribute.
	 * @throws EntityNotFoundException
	 *             if no investmentattribute is found with given id.
	 */
	public InvestmentAttribute update(InvestmentAttribute updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the investmentattributes in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the investmentattribute.
	 */

	public long countAll();


    public Page<InvestmentAttribute> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

