/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.dbtest123;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * AllDiffTypes generated by hbm2java
 */
@Entity
@Table(name="`_AllDiffTypes`"
    ,schema="dbo"
)

public class AllDiffTypes  implements java.io.Serializable {

    
    private Integer id;
    
    private Date date1;
    
    private Date date2;
    
    private Date datetime1;
    
    private Date datetime2;
    
    private Date time1;
    
    private Date time2;
    
    private Date timestamp1;
    
    private Date timestamp2;
    
    private Boolean boolean1;
    
    private Boolean boolean2;

    public AllDiffTypes() {
    }


    @Id 
    

    @Column(name="`ID`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`Date1`", length=10)
    public Date getDate1() {
        return this.date1;
    }
    
    public void setDate1(Date date1) {
        this.date1 = date1;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`Date2`", length=10)
    public Date getDate2() {
        return this.date2;
    }
    
    public void setDate2(Date date2) {
        this.date2 = date2;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`Datetime1`", length=23)
    public Date getDatetime1() {
        return this.datetime1;
    }
    
    public void setDatetime1(Date datetime1) {
        this.datetime1 = datetime1;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`datetime2`", length=23)
    public Date getDatetime2() {
        return this.datetime2;
    }
    
    public void setDatetime2(Date datetime2) {
        this.datetime2 = datetime2;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`Time1`", length=16)
    public Date getTime1() {
        return this.time1;
    }
    
    public void setTime1(Date time1) {
        this.time1 = time1;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`Time2`", length=16)
    public Date getTime2() {
        return this.time2;
    }
    
    public void setTime2(Date time2) {
        this.time2 = time2;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`Timestamp1`", length=27)
    public Date getTimestamp1() {
        return this.timestamp1;
    }
    
    public void setTimestamp1(Date timestamp1) {
        this.timestamp1 = timestamp1;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`Timestamp2`", length=27)
    public Date getTimestamp2() {
        return this.timestamp2;
    }
    
    public void setTimestamp2(Date timestamp2) {
        this.timestamp2 = timestamp2;
    }

    

    @Column(name="`Boolean1`")
    public Boolean getBoolean1() {
        return this.boolean1;
    }
    
    public void setBoolean1(Boolean boolean1) {
        this.boolean1 = boolean1;
    }

    

    @Column(name="`Boolean2`")
    public Boolean getBoolean2() {
        return this.boolean2;
    }
    
    public void setBoolean2(Boolean boolean2) {
        this.boolean2 = boolean2;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof AllDiffTypes) )
		    return false;

		 AllDiffTypes that = (AllDiffTypes) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

