/*Copyright (c) 2016-2017 testing.com All Rights Reserved.
 This software is the confidential and proprietary information of testing.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with testing.com*/

package com.test_20apr.dbtest123;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;



/**
 * Types generated by hbm2java
 */
@Entity
@Table(name="`Types`"
    ,schema="dbo"
)

public class Types  implements java.io.Serializable {

    
    private Integer id;
    
    private Byte byte1;
    
    private Short short1;
    
    private Integer int1;
    
    private BigInteger long1;
    
    private BigInteger bigint1;
    
    private Float float1;
    
    private Double double1;
    
    private BigDecimal bigDec1;
    
    private Character char1;
    
    private String string1;
    
    private String text1;
    
    private Date date1;
    
    private Date datetime1;
    
    private Date time1;
    
    private Date timestamp1;
    
    private Boolean boolean1;
    
    private byte[] blob1;
    
    private String clob1;

    public Types() {
    }


    @Id @GeneratedValue(strategy=IDENTITY)
    

    @Column(name="`ID`", precision=10)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    

    @Column(name="`Byte1`", precision=2)
    public Byte getByte1() {
        return this.byte1;
    }
    
    public void setByte1(Byte byte1) {
        this.byte1 = byte1;
    }

    

    @Column(name="`Short1`", precision=5)
    public Short getShort1() {
        return this.short1;
    }
    
    public void setShort1(Short short1) {
        this.short1 = short1;
    }

    

    @Column(name="`Int1`", precision=10)
    public Integer getInt1() {
        return this.int1;
    }
    
    public void setInt1(Integer int1) {
        this.int1 = int1;
    }

    

    @Column(name="`Long1`", precision=18)
    public BigInteger getLong1() {
        return this.long1;
    }
    
    public void setLong1(BigInteger long1) {
        this.long1 = long1;
    }

    

    @Column(name="`Bigint1`", precision=35)
    public BigInteger getBigint1() {
        return this.bigint1;
    }
    
    public void setBigint1(BigInteger bigint1) {
        this.bigint1 = bigint1;
    }

    

    @Column(name="`Float1`", precision=8, scale=4)
    public Float getFloat1() {
        return this.float1;
    }
    
    public void setFloat1(Float float1) {
        this.float1 = float1;
    }

    

    @Column(name="`Double1`", precision=18, scale=8)
    public Double getDouble1() {
        return this.double1;
    }
    
    public void setDouble1(Double double1) {
        this.double1 = double1;
    }

    

    @Column(name="`BigDec1`", precision=35, scale=10)
    public BigDecimal getBigDec1() {
        return this.bigDec1;
    }
    
    public void setBigDec1(BigDecimal bigDec1) {
        this.bigDec1 = bigDec1;
    }

    

    @Column(name="`Char1`", length=1)
    public Character getChar1() {
        return this.char1;
    }
    
    public void setChar1(Character char1) {
        this.char1 = char1;
    }

    

    @Column(name="`String1`")
    public String getString1() {
        return this.string1;
    }
    
    public void setString1(String string1) {
        this.string1 = string1;
    }

    

    @Column(name="`Text1`", length=400)
    public String getText1() {
        return this.text1;
    }
    
    public void setText1(String text1) {
        this.text1 = text1;
    }

    @Temporal(TemporalType.DATE)

    @Column(name="`Date1`", length=10)
    public Date getDate1() {
        return this.date1;
    }
    
    public void setDate1(Date date1) {
        this.date1 = date1;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`Datetime1`", length=23)
    public Date getDatetime1() {
        return this.datetime1;
    }
    
    public void setDatetime1(Date datetime1) {
        this.datetime1 = datetime1;
    }

    @Temporal(TemporalType.TIME)

    @Column(name="`Time1`", length=16)
    public Date getTime1() {
        return this.time1;
    }
    
    public void setTime1(Date time1) {
        this.time1 = time1;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="`Timestamp1`", length=27)
    public Date getTimestamp1() {
        return this.timestamp1;
    }
    
    public void setTimestamp1(Date timestamp1) {
        this.timestamp1 = timestamp1;
    }

    

    @Column(name="`Boolean1`")
    public Boolean getBoolean1() {
        return this.boolean1;
    }
    
    public void setBoolean1(Boolean boolean1) {
        this.boolean1 = boolean1;
    }

    

    @Column(name="`Blob1`")
    public byte[] getBlob1() {
        return this.blob1;
    }
    
    public void setBlob1(byte[] blob1) {
        this.blob1 = blob1;
    }

    

    @Column(name="`Clob1`")
    public String getClob1() {
        return this.clob1;
    }
    
    public void setClob1(String clob1) {
        this.clob1 = clob1;
    }





    public boolean equals(Object o) {
         if (this == o) return true;
		 if ( (o == null )) return false;
		 if ( !(o instanceof Types) )
		    return false;

		 Types that = (Types) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );
    }

    public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
    }


}

